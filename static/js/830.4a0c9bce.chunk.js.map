{"version":3,"file":"static/js/830.4a0c9bce.chunk.js","mappings":"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","sources":["helpers/api.js","components/MovieDescription/MovieDescription.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNjIxZmE3ZjQyN2Y0ZTQ5MzIyNjYyZjYzNDE1YmZiYiIsInN1YiI6IjY0OWIwOTJmMjk3NWNhMDE0NGNkMjg1NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.kUsAPv7g2_7qGtsu8oHdaiiaYd4oXVaKZLPYQa1UBFU',\n  },\n};\n\nasync function fetchMovies() {\n  const response = await axios.get(`/trending/all/day?language=en-US`, options);\n  return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}?language=en-US`, options);\n  return response.data;\n}\n\nasync function fetchSearchMovie(query) {\n  const response = await axios.get(`/search/movie?query=${query}`, options);\n  return response.data.results;\n}\n\nasync function fetchCast(id, params) {\n  const response = await axios.get(\n    `/movie/${id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nasync function fetchReviews(id, params) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nexport {\n  fetchMovieDetails,\n  fetchSearchMovie,\n  fetchMovies,\n  fetchCast,\n  fetchReviews,\n};\n","import photo from './ops.jpg';\nconst MovieDescription = ({ details }) => {\n  console.log(details);\n  const releaseDate = new Date(details.release_date);\n  return (\n    <div>\n      <div>\n        <img\n          src={\n            details.poster_path\n              ? 'https://image.tmdb.org/t/p/w500' + details.poster_path\n              : photo\n          }\n          alt={details.original_title}\n          width={250}\n          height={400}\n        />\n        <h2>\n          {details.title}({releaseDate.getFullYear()})\n        </h2>\n        <h3>User score: {Math.round(details.vote_average * 10)}%</h3>\n        <p>{details.overview}</p>\n        <h3>Genres</h3>\n        {details.genres\n          ? details.genres.map(genre => genre.name + ' ')\n          : 'Not information'}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDescription;\n","import MovieDescription from 'components/MovieDescription/MovieDescription';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { fetchMovieDetails } from 'helpers/api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [details, setDetails] = useState({});\n\n  useEffect(() => {\n    if (!movieId) return;\n    fetchMovieDetails(movieId)\n      .then(res => setDetails(res))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      <button>\n        <Link to={backLinkLocationRef.current}>Go back</Link>\n      </button>\n      <MovieDescription details={details} />\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <main>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </main>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","options","method","headers","accept","Authorization","fetchMovies","response","data","results","fetchMovieDetails","id","fetchSearchMovie","query","fetchCast","params","fetchReviews","details","console","log","releaseDate","Date","release_date","src","poster_path","photo","alt","original_title","width","height","title","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","setDetails","useEffect","then","res","catch","err","to","current","Suspense","fallback"],"sourceRoot":""}