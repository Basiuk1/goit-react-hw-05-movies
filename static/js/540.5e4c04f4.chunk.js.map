{"version":3,"file":"static/js/540.5e4c04f4.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","helpers/api.js","components/Search/Search.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 20px;\n`;\n\nexport const MoviesItem = styled.li`\n  cursor: pointer;\n  padding: 10px;\n  background-color: #f2f2f2;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const MoviesTitle = styled.h3`\n  text-align: center;\n  font-weight: bold;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  MoviesList,\n  MoviesItem,\n  Poster,\n  MoviesTitle,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesList>\n      {movies.map(({ id, title, name, original_title, poster_path }) => {\n        return (\n          <MoviesItem>\n            <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n              <MoviesTitle>{title || name}</MoviesTitle>\n              <Poster\n                src={'https://image.tmdb.org/t/p/w500' + poster_path}\n                alt={original_title}\n                width={250}\n                height={300}\n              />\n            </Link>\n          </MoviesItem>\n        );\n      })}\n    </MoviesList>\n  );\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNjIxZmE3ZjQyN2Y0ZTQ5MzIyNjYyZjYzNDE1YmZiYiIsInN1YiI6IjY0OWIwOTJmMjk3NWNhMDE0NGNkMjg1NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.kUsAPv7g2_7qGtsu8oHdaiiaYd4oXVaKZLPYQa1UBFU',\n  },\n};\n\nasync function fetchMovies() {\n  const response = await axios.get(`/trending/all/day?language=en-US`, options);\n  return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}?language=en-US`, options);\n  return response.data;\n}\n\nasync function fetchSearchMovie(query) {\n  const response = await axios.get(`/search/movie?query=${query}`, options);\n  return response.data.results;\n}\n\nasync function fetchCast(id, params) {\n  const response = await axios.get(\n    `/movie/${id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nasync function fetchReviews(id, params) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nexport {\n  fetchMovieDetails,\n  fetchSearchMovie,\n  fetchMovies,\n  fetchCast,\n  fetchReviews,\n};\n","const Search = ({ onSubmit }) => {\n  let queryValue = '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    queryValue = form.elements.query.value;\n    onSubmit(queryValue);\n    form.reset();\n  };\n \n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\" defaultValue={queryValue} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default Search;\n","import MovieList from 'components/MovieList/MovieList';\nimport Search from 'components/Search/Search';\nimport { fetchSearchMovie } from 'helpers/api';\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n    fetchSearchMovie(query)\n      .then(res => setMovies(res))\n      .catch(err => console.log(err));\n  }, [query]);\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <Search onSubmit={handleSubmit} />\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesList","styled","MoviesItem","Poster","MoviesTitle","movies","location","useLocation","map","id","title","name","original_title","poster_path","to","state","from","src","alt","width","height","axios","options","method","headers","accept","Authorization","fetchMovies","response","data","results","fetchMovieDetails","fetchSearchMovie","query","fetchCast","params","fetchReviews","onSubmit","queryValue","event","preventDefault","form","currentTarget","elements","value","reset","type","defaultValue","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","then","res","catch","err","console","log","MovieList"],"sourceRoot":""}