{"version":3,"file":"static/js/284.a08a60e6.chunk.js","mappings":"6OA6CA,EAxCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,OAVAC,EAAAA,EAAAA,YAAU,WACHL,IACLM,EAAAA,EAAAA,GAAUN,GACPO,MAAK,SAAAC,GACJ,IAAMC,EAAUD,EAAIL,KACpBC,GAAQ,OAAIK,GACb,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACX,KAGF,0BACE,wBACGG,GACCA,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACP,2BACE,gBACEC,IACEH,EACI,kCAAoCA,E,qtRAG1CI,MAAM,KACNC,OAAO,MACPC,IAAKL,KAEP,4BACE,uBAAIA,IACHC,IAAa,uCAAeA,UAbxBH,EADF,OAqBlB,C,8LCzCDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NALN,SASeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBN,EAAAA,EAAAA,IAAA,mCAA8CC,GADvE,cACQM,EADR,yBAESA,EAASC,KAAKC,SAFvB,2EAKeC,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiClB,GAAjC,uFACyBQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,mBAAyCS,GADlE,cACQM,EADR,yBAESA,EAASC,MAFlB,2EAKeG,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFACyBZ,EAAAA,EAAAA,IAAA,8BAAiCY,GAASX,GADnE,cACQM,EADR,yBAESA,EAASC,KAAKC,SAFvB,2EAKe1B,EAAU,EAAVA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBS,EAAIqB,GAA7B,uFACyBb,EAAAA,EAAAA,IAAA,iBACXR,EADW,2BAErBS,GAHJ,cACQM,EADR,yBAKSA,EAASC,MALlB,2EAQeM,EAAa,EAAbA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BtB,EAAIqB,GAAhC,uFACyBb,EAAAA,EAAAA,IAAA,iBACXR,EADW,2BAErBS,GAHJ,cACQM,EADR,yBAKSA,EAASC,MALlB,kE","sources":["components/Ð¡ast/Cast.jsx","helpers/api.js"],"sourcesContent":["import { fetchCast } from 'helpers/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport photo from './poster.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    if (!movieId) return;\n    fetchCast(movieId)\n      .then(res => {\n        const castArr = res.cast;\n        setCast([...castArr]);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {cast &&\n          cast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? 'https://image.tmdb.org/t/p/w300' + profile_path\n                    : photo\n                }\n                width=\"80\"\n                height=\"120\"\n                alt={name}\n              />\n              <div>\n                <p>{name}</p>\n                {character && <p>Character: {character}</p>}\n              </div>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNjIxZmE3ZjQyN2Y0ZTQ5MzIyNjYyZjYzNDE1YmZiYiIsInN1YiI6IjY0OWIwOTJmMjk3NWNhMDE0NGNkMjg1NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.kUsAPv7g2_7qGtsu8oHdaiiaYd4oXVaKZLPYQa1UBFU',\n  },\n};\n\nasync function fetchMovies() {\n  const response = await axios.get(`/trending/all/day?language=en-US`, options);\n  return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}?language=en-US`, options);\n  return response.data;\n}\n\nasync function fetchSearchMovie(query) {\n  const response = await axios.get(`/search/movie?query=${query}`, options);\n  return response.data.results;\n}\n\nasync function fetchCast(id, params) {\n  const response = await axios.get(\n    `/movie/${id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nasync function fetchReviews(id, params) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nexport {\n  fetchMovieDetails,\n  fetchSearchMovie,\n  fetchMovies,\n  fetchCast,\n  fetchReviews,\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchCast","then","res","castArr","catch","err","console","log","map","id","profile_path","name","character","src","width","height","alt","axios","options","method","headers","accept","Authorization","fetchMovies","response","data","results","fetchMovieDetails","fetchSearchMovie","query","params","fetchReviews"],"sourceRoot":""}