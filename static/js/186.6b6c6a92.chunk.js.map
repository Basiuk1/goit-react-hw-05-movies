{"version":3,"file":"static/js/186.6b6c6a92.chunk.js","mappings":"uMAmCA,UA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA6BE,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OAVAC,EAAAA,EAAAA,YAAU,WACHL,IACLM,EAAAA,EAAAA,IAAaN,GACVO,MAAK,SAAAC,GACJ,IAAMC,EAAaD,EAAIE,QACvBN,GAAU,OAAIK,GACf,IACAE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACZ,KAGF,0BACE,wBACGG,EAAQY,OACPZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADC,KAOZ,0EAKT,C,8LC/BDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NALN,SASeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBN,EAAAA,EAAAA,IAAA,mCAA8CC,GADvE,cACQM,EADR,yBAESA,EAASC,KAAKlB,SAFvB,2EAKemB,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCZ,GAAjC,uFACyBG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,mBAAyCI,GADlE,cACQM,EADR,yBAESA,EAASC,MAFlB,2EAKeE,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFACyBX,EAAAA,EAAAA,IAAA,8BAAiCW,GAASV,GADnE,cACQM,EADR,yBAESA,EAASC,KAAKlB,SAFvB,2EAKesB,EAAU,EAAVA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBf,EAAIgB,GAA7B,uFACyBb,EAAAA,EAAAA,IAAA,iBACXH,EADW,2BAErBI,GAHJ,cACQM,EADR,yBAKSA,EAASC,MALlB,2EAQetB,EAAa,EAAbA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BW,EAAIgB,GAAhC,uFACyBb,EAAAA,EAAAA,IAAA,iBACXH,EADW,2BAErBI,GAHJ,cACQM,EADR,yBAKSA,EAASC,MALlB,kE","sources":["components/Reviews/Reviews.jsx","helpers/api.js"],"sourcesContent":["import { fetchReviews } from 'helpers/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReview] = useState([]);\n  useEffect(() => {\n    if (!movieId) return;\n    fetchReviews(movieId)\n      .then(res => {\n        const reviewsArr = res.results;\n        setReview([...reviewsArr]);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {reviews.length ? (\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <div>Wie don't have any reviews for this movie</div>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNjIxZmE3ZjQyN2Y0ZTQ5MzIyNjYyZjYzNDE1YmZiYiIsInN1YiI6IjY0OWIwOTJmMjk3NWNhMDE0NGNkMjg1NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.kUsAPv7g2_7qGtsu8oHdaiiaYd4oXVaKZLPYQa1UBFU',\n  },\n};\n\nasync function fetchMovies() {\n  const response = await axios.get(`/trending/all/day?language=en-US`, options);\n  return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}?language=en-US`, options);\n  return response.data;\n}\n\nasync function fetchSearchMovie(query) {\n  const response = await axios.get(`/search/movie?query=${query}`, options);\n  return response.data.results;\n}\n\nasync function fetchCast(id, params) {\n  const response = await axios.get(\n    `/movie/${id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nasync function fetchReviews(id, params) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nexport {\n  fetchMovieDetails,\n  fetchSearchMovie,\n  fetchMovies,\n  fetchCast,\n  fetchReviews,\n};\n"],"names":["movieId","useParams","useState","reviews","setReview","useEffect","fetchReviews","then","res","reviewsArr","results","catch","err","console","log","length","map","id","author","content","axios","options","method","headers","accept","Authorization","fetchMovies","response","data","fetchMovieDetails","fetchSearchMovie","query","fetchCast","params"],"sourceRoot":""}